#!/usr/bin/env node
// Generated by CoffeeScript 1.6.2
(function() {
  var advanceWidth, advanceWidthMax, d, fs, glyph, glyphHeight, glyphWidth, hmtx, i, margin, numGlyphs, offsetX, scale, svgHeight, svgWidth, translate, ttf, ttfjs, unitsPerEm, _i, _len, _ref;

  fs = require('fs');

  ttfjs = require('../../');

  if (process.argv.length > 2) {
    ttf = ttfjs.TrueType.createFromBuffer(fs.readFileSync(process.argv[2]));
    numGlyphs = ttf.getNumGlyphs();
    unitsPerEm = ttf.head.unitsPerEm;
    advanceWidthMax = ttf.hhea.advanceWidthMax;
    glyphWidth = 100;
    glyphHeight = 150;
    margin = 10;
    svgWidth = (glyphWidth + margin) * 12;
    svgHeight = Math.ceil(numGlyphs / 12) * (glyphHeight + margin);
    scale = glyphWidth / advanceWidthMax;
    advanceWidth = 0;
    translate = {
      x: margin,
      y: margin
    };
    console.log("<?xml version=\"1.0\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" >\n<svg width=\"" + svgWidth + "\" height=\"" + svgHeight + "\" version=\"1.1\"\n     xmlns=\"http://www.w3.org/2000/svg\">");
    _ref = ttf.glyf.glyphs;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      glyph = _ref[i];
      translate.x = (i % 12) * (glyphWidth + margin) + margin / 2;
      translate.y = parseInt(i / 12, 10) * (glyphHeight + margin) + margin / 2;
      d = glyph.toSVGPathString({
        matrix: {
          a: 1,
          c: 0,
          e: 0,
          b: 0,
          d: -1,
          f: 0
        },
        relative: true
      });
      if (d === '') {
        d = 'M 0,0';
      }
      if (i < ttf.hmtx.hMetrics.length) {
        hmtx = ttf.hmtx.hMetrics[i];
        advanceWidth = hmtx.advanceWidth;
      }
      offsetX = (advanceWidthMax - advanceWidth) / 2;
      console.log("<g id='glyph_" + glyph.GID + "' transform='translate(" + translate.x + "," + translate.y + ")'>\n  <rect opacity=\"0\" transform='translate(" + (offsetX * scale) + ", 0)' width='" + (advanceWidth * scale) + "' height='" + (glyphHeight - 2) + "' fill='#eee'></rect>\n  <path opacity=\"0\" fill='none' stroke='#c66' d=\"M0,0 100,0\" transform='translate(0, " + (glyphHeight / 1.5) + ")'></path>\n  <rect width='" + (glyphWidth - 2) + "' height='" + (glyphHeight - 2) + "' fill='none' stroke='#ccc'></rect>\n  <path fill=\"#000\" transform='translate(0, " + (glyphHeight / 1.5) + ") scale(" + scale + ") translate(" + offsetX + ", 0)' d='" + d + "'></path>\n</g>");
    }
    console.log('</svg>');
  }

}).call(this);
